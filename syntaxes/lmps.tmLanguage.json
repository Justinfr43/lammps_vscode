{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(dpd|temp/deform/eff|smd/tlsph/dt|temp/region|ke/atom|inertia/chunk|smd/ulsph/strain|vacf|orientorder/atom|angle/local|spin|mliap|temp/body|dpd/atom|cluster/atom|fragment/atom|aggregate/atom|temp/eff|group/group|adf|stress/atom|centroid/stress/atom|slice|basal/atom|gyration/shape/chunk|sph/e/atom|smd/tlsph/stress|property/atom|global/atom|sph/rho/atom|smd/tlsph/strain/rate|sph/t/atom|chunk/spread/atom|temp/com|omega/chunk|temp|pressure|reduce|reduce/region|gyration/chunk|body/local|temp/sphere|pe|damage/atom|pressure/cylinder|bond/local|temp/partial|temp/uef|entropy/atom|dilatation/atom|temp/profile|contact/atom|xrd|smd/contact/radius|smd/triangle/vertices|plasticity/atom|chunk/atom|reduce/chunk|cnp/atom|smd/ulsph/effm|centro/atom|temp/chunk|ke/rigid|hexorder/atom|temp/drude|mesont|coord/atom|angle|smd/rho|dihedral|temp/region/eff|temp/cs|pair/local|hma|property/chunk|smd/damage|displace/atom|dipole/chunk|ackland/atom|ke|smd/vol|saed|temp/asphere|smd/plastic/strain|improper/local|gyration|fep|erotate/sphere/atom|tdpd/cc/atom|stress/mop|stress/mop/profile|dihedral/local|event/displace|smd/tlsph/shape|smd/tlsph/defgrad|smd/ulsph/strain/rate|bond|smd/plastic/strain/rate|pressure/uef|viscosity/cos|rdf|smd/tlsph/strain|msd/chunk|smd/hourglass/error|temp/ramp|cna/atom|erotate/asphere|smd/ulsph/stress|voronoi/atom|heat/flux|improper|smd/internal/energy|gyration/shape|edpd/temp/atom|ke/eff|smd/tlsph/num/neighs|com/chunk|angmom/chunk|com|pe/atom|erotate/sphere|pair|smd/ulsph/num/neighs|momentum|erotate/rigid|property/local|rigid/local|torque/chunk|msd|temp/deform|sna/atom|snad/atom|snav/atom|snap|compute|ke/atom/eff|ti|ptm/atom|vcm/chunk|msd/nongauss|temp/rotate|force/tally|heat/flux/tally|pe/tally|pe/mol/tally|stress/tally)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(zbl|tersoff/zbl|edip|edip/multi|dsmc|lj/cut/soft|lj/cut/coul/cut/soft|lj/cut/coul/long/soft|lj/cut/tip4p/long/soft|lj/charmm/coul/long/soft|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/long/soft|tip4p/long/soft|morse/soft|brownian|brownian/poly|sph/heatconduction|smd/ulsph|kolmogorov/crespi/z|sph/taitwater|peri/pmb|peri/lps|peri/ves|peri/eps|lj/mdf|buck/mdf|lennard/mdf|smd/tlsph|reax/c|lj/charmm/coul/charmm|lj/charmm/coul/charmm/implicit|lj/charmm/coul/long|lj/charmm/coul/msm|lj/charmmfsw/coul/charmmfsh|lj/charmmfsw/coul/long|ufm|snap|sph/rhosum|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|oxdna2/dh|tri/lj|quip|multi/lucy/rx|body/nparticle|mm3/switch3/coulgauss/long|colloid|beck|kolmogorov/crespi/full|meam/sw/spline|table|edpd|mdpd|mdpd/rhosum|tdpd|lj/switch3/coulgauss/long|mesocnt|lj/smooth|none|polymorphic|mliap|lj/cut|awpmd/cut|sph/lj|yukawa/colloid|lj/gromacs|lj/gromacs/coul/gromacs|buck|buck/coul/cut|buck/coul/long|buck/coul/msm|spin/exchange|lj/expand|lj/expand/coul/long|yukawa|gw|gw/zbl|gran/hooke|gran/hooke/history|gran/hertz/history|lj/smooth/linear|coul/diel|vashishta|vashishta/table|bop|drip|eim|table/rx|list|buck6d/coul/gauss/dsf|buck6d/coul/gauss/long|lj/sdk|lj/sdk/coul/long|lj/sdk/coul/msm|lubricate|lubricate/poly|cosine/squared|mesont/tpm|resquared|spin/neel|coul/shield|airebo|airebo/morse|rebo|local/density|lubricateU|lubricateU/poly|sw|eam|eam/alloy|eam/cd|eam/cd/old|eam/fs|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|oxrna2/dh|comb|comb3|e3b|atm|sph/idealgas|lj/cubic|soft|agni|meam/c|nb3b/harmonic|tersoff|tersoff/table|spin/dipole/cut|spin/dipole/long|lj/class2|lj/class2/coul/cut|lj/class2/coul/long|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|oxdna/coaxstk|pair_style|body/rounded/polygon|eff/cut|hbond/dreiding/lj|hbond/dreiding/morse|smtbq|granular|body/rounded/polyhedron|born|born/coul/long|born/coul/msm|born/coul/wolf|born/coul/dsf|born/coul/dsf/cs|born/coul/long/cs|born/coul/wolf/cs|buck/coul/long/cs|coul/long/cs|coul/wolf/cs|lj/cut/coul/long/cs|lj/class2/coul/long/cs|dpd|dpd/tstat|gauss|gauss/cut|extep|ilp/graphene/hbn|nm/cut|nm/cut/coul/cut|nm/cut/coul/long|spin/dmi|lj/long/coul/long|lj/long/tip4p/long|meam/spline|python|smd/hertz|thole|lj/cut/thole/long|lj/cut/tip4p/cut|lj/cut/tip4p/long|exp6/rx|smd/tri_surface|buck/long/coul/long|lj96/cut|mie/cut|adp|mgpt|lcbop|morse|morse/smooth/linear|coul/slater|coul/slater/cut|coul/slater/long|momb|lebedeva/z|zero|lj/cut/coul/cut|lj/cut/coul/debye|lj/cut/coul/dsf|lj/cut/coul/long|lj/cut/coul/msm|lj/cut/coul/wolf|spin/magelec|kim|sdpd/taitwater/isothermal|srp|sph/taitwater/morris|lj/cut/dipole/cut|lj/sf/dipole/sf|lj/cut/dipole/long|lj/long/dipole/long|tersoff/mod|tersoff/mod/c|dpd/fdt|dpd/fdt/energy|coul/cut|coul/debye|coul/dsf|coul/long|coul/msm|coul/streitz|coul/wolf|tip4p/cut|tip4p/long|multi/lucy|line/lj|gayberne|hybrid|hybrid/overlay)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(table|class2|bond_style|mm3|harmonic|harmonic/shift|fene/expand|zero|nonlinear|hybrid|gromos|morse|quartic|none|fene|special|harmonic/shift/cut|oxdna/fene|oxdna2/fene|oxrna2/fene)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(class2|class2/p6|angle_style|cosine/buck6d|quartic|fourier/simple|cosine/periodic|hybrid|dipole|sdk|cosine/delta|table|charmm|cosine/shift|cosine|cosine/shift/exp|harmonic|cosine/squared|none|cross|mm3|zero|fourier)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(spherical|dihedral_style|helix|charmm|charmmfsw|cosine/shift/exp|multi/harmonic|hybrid|zero|harmonic|opls|none|class2|table|fourier|nharmonic|quadratic|table/cut)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(zero|ring|improper_style|cvff|harmonic|distharm|sqdistharm|class2|inversion/harmonic|hybrid|umbrella|distance|fourier|none|cossq)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(h5md|cfg/uef|netcdf|netcdf/mpiio|atom/adios|custom/adios|image|movie|molfile|dump|vtk)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(smd/integrate_ulsph|smd/adjust_dt|saed/vtk|langevin/drude|sph|wall/piston|nvt/uef|npt/uef|imd|qmmm|nve/eff|recenter|drude|nph/sphere|atc|npt/cauchy|move|bond/react|reax/c/species|ave/time|langevin|nph/asphere|bocs|electron/stopping|lineforce|ave/histo|ave/histo/weight|rhok|pour|wall/ees|wall/region/ees|qeq/comb|eos/table/rx|edpd/source|tdpd/source|nve/body|qbmsst|nvk|nve/tri|lb/pc|lb/momentum|freeze|hyper/local|tfmc|append/atoms|spring/rg|qeq/reax|wall/body/polygon|precession/spin|nvt/eff|npt/eff|nph/eff|indent|planeforce|viscous|property/atom|langevin/spin|addtorque|python/move|aveforce|flow/gauss|vector|meso/move|spring|latte|viscosity|nve/asphere/noforce|nve/spin|smd/wall_surface|nve/asphere|atom/swap|wall/srd|lb/fluid|propel/self|rigid/meso|gcmc|temp/berendsen|ave/correlate/long|bond/create|bond/create/angle|nvt/manifold/rattle|press/berendsen|restrain|wall/gran|adapt|bond/swap|nve/manifold/rattle|shake|rattle|accelerate/cos|print|adapt/fep|spring/self|python/invoke|filter/corotate|ttm|ttm/mod|store/force|nve/sphere|nvt/asphere|temp/rescale|nve/line|pafi|numdiff|enforce2d|gravity|balance|ave/chunk|nvt/body|wall/reflect/stochastic|widom|temp/csvr|temp/csld|nvt/sphere|eos/table|grem|external|efield|sph/stationary|momentum|momentum/chunk|wall/reflect|oneway|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|qeq/fire|smd/move_tri_surf|manifoldforce|npt/body|msst|nve/noforce|mvv/dpd|mvv/edpd|mvv/tdpd|client/md|neb|rx|ehex|reax/c/bonds|store/state|spring/chunk|thermal/conductivity|deform|npt/asphere|ipi|nvt/sllod|gle|nve/awpmd|gld|wall/gran/region|heat|ffl|wall/lj93|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|wall/morse|wall/region|cmap|nve/dotc/langevin|nph/body|lb/rigid/pc/sphere|qtb|pimd|temp/rescale/eff|controller|tmd|dt/reset|dpd/energy|langevin/eff|setforce|setforce/spin|addforce|drude/transform/direct|drude/transform/inverse|ave/atom|bond/break|deposit|tune/kspace|ti/spring|rigid|rigid/nve|rigid/nvt|rigid/npt|rigid/nph|rigid/small|rigid/nve/small|rigid/nvt/small|rigid/npt/small|rigid/nph/small|smd|smd/integrate_tlsph|shardlow|eos/cv|plumed|nve/limit|npt/sphere|poems|evaporate|nphug|mscg|nve/dot|hyper/global|ave/correlate|fix|lb/viscous|orient/fcc|orient/bcc|colvars|nvt/sllod/eff|nve|box/relax|wall/body/polyhedron|smd/setvel|halt|neb/spin|srd|phonon|drag|orient/eco|nvt|npt|nph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(scale|time_integration|nodeset_to_elementset|type|source_integration|boundary_integral|thermal|mass_matrix|contour_integral|sample_frequency|electron_integration|lumped_lambda_solve|boundary_dynamics|atomic_charge|fix_modify|fix|delete_elements|add_to_nodeset|create_elementset|add_species|on_the_fly|rates|write_restart|plane|fields|fix_flux|output|computes|create_nodeset|initial|reset_time|momentum|create|write|fe_md_boundary|add_molecule|kernel|track_displacement|mask_direction|temperature_definition|poisson_solver|unfix|read_restart|source|material|unfix_flux|consistent_fe_initialization|quadrature|kernel_bandwidth|localized_lambda|boundary_faceset|reference_potential_energy|filter|pair_interactions|bond_interactions|decomposition|exchange|volume_integral|reset_atomic_reference_positions|equilibrium_start|write_atom_weights|internal_quadrature|atom_weight|gradients|read|remove_molecule|nodeset|atom_element_map|internal_element_set|remove_source|remove_species|box)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(info|change_box|improper_coeff|pair_coeff|variable|clear|compute_modify|log|timestep|label|special_bonds|read_data|delete_atoms|displace_atoms|create_box|timer|third_order|read_restart|print|dynamical_matrix|server mc|temper/npt|neb|write_dump|mass|neighbor|create_atoms|neb/spin|restart|read_dump|min_style spin|min_style spin/cg|min_style spin/lbfgs|package|pair_write|prd|minimize|minimize/kk|temper|delete_bonds|reset_atom_ids|bond_write|lattice|region|python|boundary|bond_coeff|thermo_modify|min_modify|reset_timestep|include|kim_init|kim_interactions|kim_query|kim_param|kim_property|molecule|velocity|group2ndx|ndx2group|create_bonds|min_style|if|comm_style|pair_modify|partition|box|neigh_modify|unfix|atom_modify|dimension|dihedral_coeff|hyper|balance|set|message|rerun|units|undump|thermo_style|quit|newton|thermo|next|replicate|comm_modify|echo|temper/grem|shell|kspace_modify|reset_mol_ids|kspace_style|jump|run_style|server md|write_restart|run|processors|dielectric|write_coeff|atom_style|suffix|tad|uncompute|group|server|write_data|dump_modify|angle_coeff)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}